{"version":3,"sources":["store/atom.js","store/hook.js","components/\bCard/ListToggle.js","components/\bCard/Item.js","components/\bCard/index.js","components/Banner/BannerContent.js","components/Banner/index.js","pages/home.js","gql/query.js","components/common/Search.js","store/select.js","util.js","components/Header/Navgation.js","gql/mutation.js","components/Header/UserProfile.js","components/Header/index.js","components/common/Layout.js","pages/moveInfo/TheaterSelect.js","pages/moveInfo/DateSelect.js","pages/moveInfo/TimeList.js","pages/moveInfo/index.js","style.js","components/common/CentralText.js","components/common/Password.js","components/common/UserForm.js","pages/singUp.js","pages/singIn.js","components/common/SetPassword.js","pages/forgetPassword.js","pages/resetPassword.js","pages/myList.js","components/common/PrivateRoute.js","App.js","reportWebVitals.js","components/GlobalStyle.js","index.js"],"names":["atom","require","areasInfo","key","default","theaterInfo","movies","loginState","localStorage","getItem","message","userData","username","avatar","favorite_movies","useChangeLoggedState","useRecoilState","setIsLoggedIn","useSetMoviesList","useData","setUseData","isToggle","movie_id","concat","filter","id","ListToggleDiv","styled","div","toggled","ListToggle","useRecoilValue","useState","setToggled","setMovieList","isMounted","useRef","useEffect","includes","current","onClick","e","preventDefault","icon","size","StyledItem","props","backdrop","OverLay","ItemTitle","Rank","Plot","Item","info","title","anticipation","img_src","release_text","isLoggedIn","to","pathname","state","TitleList","TitleWrapper","Title","Card","titles","movieDatas","map","Content","p","ButtonWrapper","Button","button","css","BannerContent","isOnList","setIsToggle","isTouch","src","alt","StyledBanner","url","InnerContainer","Banner","movieInfo","Home","movie","stopAutoPlayOnHover","animation","interval","navButtonsAlwaysVisible","index","gql","GET_AREA_INFO","GET_THEATER_INFO","GET_MOVIES","GET_MOVIE_LIST","StyledSearch","input","width","Number","Search","text","searchEvent","type","placeholder","onBlur","messageState","selector","get","isOpen","Boolean","showTimeListGroupByType","theaterArray","showTime","reduce","obj","theater","showTimeInfo","theater_id","length","theater_name","typeObj","timeObj","push","sort","a","b","show_time","localeCompare","setDateFormat","date","month","getMonth","padStart","day","getDate","getFullYear","vaildateStateFun","setErrorState","errorState","value","target","name","errorMsg","trim","test","document","querySelector","StyledNav","nav","Navgation","UPDATE_SHOW_TIME","LOGIN_BY_OAUTH","LOGOUT","SIGN_IN","SIGNUP_USER","SEND_EMAIL","CHANGE_PASSWORD","SET_MOVIE_LIST","GET_USER_INFO","User","Image","Name","h2","withRouter","setMsg","useMutation","me","loading","error","changeState","logout","addFoviesMovie","userInfo","setUserInfo","isTouched","fetchData","useCallback","data","console","log","variables","logoutFun","removeItem","history","CircularProgress","color","Profile","StyledHeader","header","SearchDiv","useQuery","Date","useLocation","movieData","setMovieData","tempList","setTempList","msg","queryMoviesByDate","handleClose","event","reason","Snackbar","open","autoHideDuration","anchorOrigin","vertical","horizontal","onClose","elevation","variant","severity","newMovies","MainDiv","main","Layout","children","setArea","setTheater","areaInfo","treaters","window","scrollTo","queryAllArea","getAllTheaters","StyledDiv","SelectDiv","StyledSelect","Select","TheaterSelect","area","getAreaValue","areaItems","searchTheater","InputLabel","labelId","onChange","MenuItem","area_id","area_name","StyledButton","selected","StyleP","StyledPaper","Paper","DateSelect","setQueryDate","queryDate","num","i","setDate","isDateEqualTo","selectDate","List","ul","Type","TimeList","timeList","disabledState","time","dateTime","Object","values","keys","disabled","Container","CardCont","Post","backDrop","Description","MovieInfo","location","satifaction","release_time","queryTimeByMovieId","theaterItems","setTimrList","setDateTime","city","setCity","getShowTimeList","theater_ids","list","areaId","find","theaterName","newList","entries","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","marginLeft","marginRight","margin","backgroundColor","palette","secondary","form","submit","multilineColor","CentralText","StyledTextField","TextField","Password","vaildateFun","onChangeFun","showPassword","setShowPassword","label","charAt","toUpperCase","slice","required","fullWidth","autoComplete","helperText","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","onMouseDown","Visibility","VisibilityOff","StyleContainer","StyledCheckBox","GOOGLE_LOGIN_BTN","GoogleLogin","formStyle","action","isSignUp","userObj","password","email","comfiredPassword","classes","LoginWithOauth","setUserData","readTerms","disableState","setDisableState","isLoading","setIsLoading","didMount","vaildate","some","every","getUserData","vaildateState","loginWithOauth","setToken","responseFacebook","submitHandler","varibles","setItem","component","maxWidth","className","Avatar","Typography","onSubmit","Grid","container","item","xs","justify","FormControlLabel","control","clientId","process","buttonText","onSuccess","profileObj","googleId","cookiePolicy","appId","autoLoad","fields","callback","cssClass","SingUp","registerUser","SingIn","login","formType","isComfiredEimal","pwdData","setPwdData","token","getPwdData","handleSubmit","sendComfiredEmail","ForgetPassword","ResetPassword","changePassword","StyledLi","li","PostDiv","InfoDiv","MovieInfoCard","TextP","MyList","ids","movieInfos","setmovieInfos","queryMoviesByIds","info_src","href","PrivateRoute","Component","rest","render","from","library","add","fab","faCheck","faPlus","App","basename","path","exact","home","singUp","singIn","forgetPassword","resetPassword","myList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyles","createGlobalStyle","normalize","cache","InMemoryCache","httplink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","connectToDevTools","ReactDOM","GlobalStyle","getElementById"],"mappings":"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","file":"static/js/main.810967f4.chunk.js","sourcesContent":["const { atom } = require('recoil');\n\nconst areasInfo = atom({\n  key: 'areas',\n  default: [],\n});\n\nconst theaterInfo = atom({\n  key: 'theaters',\n  default: [],\n});\n\nconst movies = atom({\n  key: 'movies',\n  default: [],\n});\n\nconst loginState = atom({\n  key: 'isLoggedIn',\n  default: !!localStorage.getItem('token'),\n});\n\nconst message = atom({\n  key: 'message',\n  default: '',\n});\n\nconst myList = atom({\n  key: 'mylist',\n  default: [],\n});\n\nconst userData = atom({\n  key: 'userData',\n  default: { username: '', avatar: '', favorite_movies: [] },\n});\n\nexport {\n  areasInfo,\n  theaterInfo,\n  movies,\n  loginState,\n  message,\n  myList,\n  userData,\n};\n","import { useRecoilState } from 'recoil';\nimport { loginState, userData } from './atom';\n\nconst useChangeLoggedState = () => {\n  const [isLoggedIn, setIsLoggedIn] = useRecoilState(loginState);\n\n  return () => {\n    setIsLoggedIn(!!localStorage.getItem('token'));\n  };\n};\n\nconst useSetMoviesList = () => {\n  const [useData, setUseData] = useRecoilState(userData);\n  const { favorite_movies } = useData;\n  return (isToggle, movie_id) => {\n    if (isToggle) {\n      setUseData({\n        ...useData,\n        favorite_movies: favorite_movies.concat(movie_id),\n      });\n    } else {\n      setUseData({\n        ...useData,\n        favorite_movies: favorite_movies.filter((id) => id !== movie_id),\n      });\n    }\n  };\n};\n\nexport { useChangeLoggedState, useSetMoviesList };\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { userData } from '../../store';\nimport { useSetMoviesList } from 'store/hook';\nimport styled from 'styled-components';\n\nconst ListToggleDiv = styled.div`\n  border: 2px solid rgba(255, 255, 255, 0.2);\n  background: ${({ toggled }) => (toggled ? '#e50914' : 'none')};\n  width: 32px;\n  height: 32px;\n  font-size: 16px;\n  border-radius: 32px;\n  overflow: hidden;\n  position: absolute;\n  right: 20px;\n  top: 20px;\n  opacity: 0;\n\n  &:hover {\n    border: 2px solid #ffffff;\n    div {\n      top: -32px;\n    }\n  }\n  div {\n    position: absolute;\n    top: ${({ toggled }) => (toggled ? '-32px' : '0')};\n    left: 4px;\n    height: 64px;\n    width: 32px;\n    -webkit-transition: 0.125s ease;\n    transition: 0.125s ease;\n    svg {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 32px;\n      width: 32px;\n    }\n  }\n`;\n\nexport const ListToggle = ({ movie_id }) => {\n  const { favorite_movies } = useRecoilValue(userData);\n  const [toggled, setToggled] = useState(false);\n  const setMovieList = useSetMoviesList();\n  const isMounted = useRef(false);\n\n  useEffect(() => {\n    setToggled(favorite_movies.includes(movie_id));\n  }, [favorite_movies, movie_id]);\n\n  useEffect(() => {\n    if (isMounted.current) {\n      setMovieList(toggled, movie_id);\n    } else {\n      isMounted.current = true;\n    }\n\n    return () => {\n      isMounted.current = false;\n    };\n  }, [toggled]);\n\n  return (\n    <ListToggleDiv\n      toggled={toggled}\n      onClick={(e) => {\n        e.preventDefault();\n        setToggled(!toggled);\n      }}\n    >\n      <div>\n        <FontAwesomeIcon icon={['fas', 'plus']} size=\"lg\" />\n        <FontAwesomeIcon icon={['fas', 'check']} size=\"lg\" />\n      </div>\n    </ListToggleDiv>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useRecoilValue } from 'recoil';\nimport { loginState } from 'store/atom';\nimport styled from 'styled-components';\nimport { ListToggle } from './ListToggle';\n\nconst StyledItem = styled.div`\n  width: 230px;\n  background-color: #000;\n  background-image: url(${(props) => `${props.backdrop}`});\n  background-position: center;\n  background-size: 100%;\n  height: 328px;\n  background-repeat: no-repeat;\n  overflow: hidden;\n  margin-right: 10px;\n  transition: background 1s ease;\n  margin-bottom: 20px;\n  &:last-child {\n    margin-right: 0;\n  }\n  &:hover {\n    background-size: 150%;\n    div {\n      opacity: 1;\n      div:nth-child(3) {\n        margin-top: 10px;\n      }\n    }\n    div :first-child {\n      pointer-events: all;\n    }\n  }\n`;\n\nconst OverLay = styled.div`\n  background: linear-gradient(\n    to bottom,\n    rgba(0, 0, 0, 0.75) 0%,\n    transparent 100%\n  );\n  padding: 20px;\n  position: relative;\n  height: 100%;\n  pointer-events: none;\n  opacity: 0;\n  transition: opacity 0.125s ease;\n`;\nconst ItemTitle = styled.div`\n  font-size: 22px;\n  font-weight: 200;\n  opacity: 0;\n  transition: opacity 0.25s ease;\n  &:hover {\n    margin-top: 10px;\n    opacity: 1;\n  }\n`;\n\nconst Rank = styled.div`\n  font-size: 14px;\n  opacity: 0;\n  transition: opacity 0.25s ease 0.125s;\n`;\n\nconst Plot = styled.div`\n  font-size: 14px;\n  margin-top: 100px;\n  font-weight: 300;\n  line-height: 1.6;\n  opacity: 0;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 5;\n  -webkit-box-orient: vertical;\n  text-overflow: ellipsis;\n  transition: margin 0.25s ease 0.125s, opacity 0.25s ease 0.25s;\n`;\n\nexport default function Item({ info }) {\n  const { title, anticipation, img_src, release_text, movie_id } = info;\n  const isLoggedIn = useRecoilValue(loginState);\n\n  return (\n    <StyledItem backdrop={img_src}>\n      <Link to={{ pathname: `/movie-info/${title}`, state: { ...info } }}>\n        <OverLay>\n          <ItemTitle>{title}</ItemTitle>\n          <Rank>{anticipation}</Rank>\n          <Plot> {release_text}</Plot>\n          {isLoggedIn && <ListToggle movie_id={movie_id} />}\n        </OverLay>\n      </Link>\n    </StyledItem>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Item from './Item';\n\nconst TitleList = styled.div`\n  padding: 20px 40px;\n  box-sizing: border-box;\n  transition: opacity 3s ease;\n  opacity: 1;\n  position: relative;\n  z-index: 4;\n`;\n\nconst TitleWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  margin: 20px 0;\n  width: calc(100vw - 80px);\n  box-sizing: border-box;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  font-size: 24px;\n  font-weight: 600;\n  line-height: 1.4;\n  margin-bottom: 1em;\n`;\n\nexport default function Card({ title, movieDatas }) {\n  const titles = movieDatas.map((info) => (\n    <Item key={info.movie_id} info={info} />\n  ));\n\n  return (\n    <TitleList>\n      <Title>\n        <h1>{title}</h1>\n        <TitleWrapper>{titles}</TitleWrapper>\n      </Title>\n    </TitleList>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useRecoilValue } from 'recoil';\nimport { loginState, userData } from 'store/atom';\nimport { useSetMoviesList } from 'store/hook';\nimport styled, { css } from 'styled-components';\n\nconst Content = styled.div`\n  position: relative;\n  z-index: 4;\n  width: 500px;\n  left: 60px;\n  top: 40vh;\n  margin-right: 72px;\n  p {\n    width: 100%;\n  }\n  h2 {\n    font-size: 24px;\n    margin-bottom: 24px;\n  }\n`;\nconst Title = styled.p`\n  font-size: 48px;\n  font-weight: 600;\n  margin-bottom: 16px;\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  width: 200px;\n  margin-top: 30px;\n  justify-content: space-between;\n`;\n\nconst Button = styled.button`\n  ${(props) =>\n    props.toggled &&\n    css`\n      border: 2px solid red !important;\n      color: red !important;\n    `}\n  background: transparent;\n  display: flex;\n  height: 40px;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  padding: 20px;\n  box-sizing: border-box;\n  border: 2px solid rgba(245, 245, 241, 0.2);\n  border-radius: 40px;\n  font-size: 14px;\n  font-weight: 600;\n  transition: border 0.125s ease, background 0.125s ease;\n  cursor: pointer;\n  &:focus {\n    outline: none;\n  }\n  &:hover,\n  &:active {\n    border: 2px solid #fff;\n  }\n`;\n\nexport default function BannerContent({ info }) {\n  const { title, movie_id } = info;\n  const { favorite_movies } = useRecoilValue(userData);\n  const setMovieList = useSetMoviesList();\n  const isOnList = favorite_movies.includes(movie_id);\n  const [isToggle, setIsToggle] = useState(isOnList);\n  const isTouch = useRef(false);\n  const isLoggedIn = useRecoilValue(loginState);\n\n  useEffect(() => {\n    if (isTouch.current) {\n      setMovieList(isToggle, movie_id);\n    } else {\n      isTouch.current = true;\n    }\n  }, [isToggle]);\n\n  return (\n    <>\n      <Content>\n        <Title>{info.title}</Title>\n        <h2>Now available</h2>\n        <ButtonWrapper>\n          <Button>\n            <Link to={{ pathname: `/movie-info/${title}`, state: { ...info } }}>\n              時刻表\n            </Link>\n          </Button>\n          {isLoggedIn && (\n            <Button toggled={isToggle} onClick={() => setIsToggle(!isToggle)}>\n              {isToggle ? ' On' : '+ My'} List\n            </Button>\n          )}\n        </ButtonWrapper>\n      </Content>\n      <img src={info.img_src} alt={info.title} />\n    </>\n  );\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport BannerContent from './BannerContent';\n\nconst StyledBanner = styled.div`\n  background-image: ${(props) => `url(${props.url})`};\n  width: 100%;\n  position: relative;\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  height: 952px;\n`;\n\nconst InnerContainer = styled.div`\n  height: 100%;\n  background-image: linear-gradient(\n    rgba(0, 0, 0, 0.85) 15%,\n    rgba(0, 0, 0, 0.2) 40%,\n    #000 90%\n  );\n  display: flex;\n`;\n\nexport default function Banner({ info }) {\n  return (\n    <StyledBanner url={info.img_src}>\n      <InnerContainer>\n        <BannerContent info={info} />\n      </InnerContainer>\n    </StyledBanner>\n  );\n}\n","import Card from 'components/\bCard';\nimport Banner from 'components/Banner';\nimport React from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { movies } from 'store/atom';\nimport Carousel from 'react-material-ui-carousel';\n\nconst movieInfo = [\n  {\n    img_src:\n      'https://movies.yahoo.com.tw/i/o/production/movies/March2021/vsfkM9g2D2WvlOqvcuS2-672x953.jpg',\n    title: '當男人戀愛時',\n    movie_id: '11255',\n  },\n  {\n    img_src:\n      'https://movies.yahoo.com.tw/i/o/production/movies/March2021/S5Cyarbok0LDaYkEhe9x-742x1080.jpg',\n    title: '名偵探柯南：緋色的不在場證明',\n    movie_id: '11281',\n  },\n  {\n    img_src:\n      'https://movies.yahoo.com.tw/i/o/production/movies/March2021/zdiICr3wA7jaeEANB68a-757x1080.jpg',\n    title: '永生戰',\n    movie_id: '11073',\n  },\n  {\n    img_src:\n      'https://movies.yahoo.com.tw/i/o/production/movies/March2021/Li5ikEWlp63wbE4lLWWb-757x1080.jpg',\n    title: '聽見歌 再唱',\n    movie_id: '11232',\n  },\n  {\n    img_src:\n      'https://movies.yahoo.com.tw/i/o/production/movies/March2021/dlEo9295zU5P29FppTiN-757x1080.jpg',\n    title: '哥吉拉大戰金剛',\n    movie_id: '11215',\n  },\n];\n\nfunction Home() {\n  const movie = useRecoilValue(movies);\n\n  return (\n    <>\n      <Carousel\n        stopAutoPlayOnHover={true}\n        animation=\"slide\"\n        interval={3000}\n        navButtonsAlwaysVisible={true}\n      >\n        {movieInfo.map((info, index) => (\n          <Banner key={index} info={info} />\n        ))}\n      </Carousel>\n      <Card title=\"現正熱映中\" movieDatas={movie} />\n    </>\n  );\n}\n\nexport default Home;\n","const { gql } = require('@apollo/client');\n\nconst GET_AREA_INFO = gql`\n  query queryAllArea {\n    queryAllArea {\n      area_name\n      area_id\n    }\n  }\n`;\n\nconst GET_THEATER_INFO = gql`\n  query getAllTheaters {\n    getAllTheaters {\n      theater_id\n      theater_name\n      area_id\n    }\n  }\n`;\n\nconst GET_MOVIES = gql`\n  query queryMoviesByDate($date: String!) {\n    queryMoviesByDate(date: $date) {\n      movie_id\n      title\n      anticipation\n      satifaction\n      img_src\n      release_time\n      release_text\n      info_src\n    }\n  }\n`;\n\nconst GET_SHOW_TIME = gql`\n  query queryTimeById($id: String!) {\n    queryTimeById(id: $id) {\n      theater_id\n      type\n      show_time\n    }\n  }\n`;\n\nconst GET_MOVIE_LIST = gql`\n  query queryMoviesByIds($ids: [String!]) {\n    queryMoviesByIds(ids: $ids) {\n      movie_id\n      title\n      anticipation\n      satifaction\n      img_src\n      release_time\n      release_text\n      info_src\n    }\n  }\n`;\n\nexport {\n  GET_AREA_INFO,\n  GET_THEATER_INFO,\n  GET_MOVIES,\n  GET_SHOW_TIME,\n  GET_MOVIE_LIST,\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledSearch = styled.input`\n  color: #fff;\n  font-family: 'Lato', sans-serif;\n  font-weight: 300;\n  font-size: 14px;\n  height: 36px;\n  width: ${(props) => `${props.width}%`};\n  appearance: none;\n  border: 0;\n  border: 2px solid rgba(245, 245, 245, 0.1);\n  background: transparent;\n  outline: none;\n  border-radius: 36px;\n  padding: 0 10px;\n  pointer-events: all;\n  transition: border 0.25s ease, width 0.125s ease 0.125s;\n  &:focus {\n    border: 2px solid #e50914;\n    width: ${(props) => `${Number(props.width) * 1.5}%`};\n  }\n`;\n\nfunction Search({ text, width, searchEvent }) {\n  return (\n    <StyledSearch\n      type=\"search\"\n      placeholder={text}\n      width={width}\n      onBlur={searchEvent}\n    />\n  );\n}\n\nexport default Search;\n","import { selector } from 'recoil';\nimport { message } from './atom';\n\nexport const messageState = selector({\n  key: 'messageState',\n  get: ({ get }) => {\n    const isOpen = Boolean(get(message));\n    return {\n      isOpen,\n    };\n  },\n});\n","const showTimeListGroupByType = (theaterArray, showTime) => {\n  return theaterArray.reduce((obj, theater) => {\n    const showTimeInfo = showTime.filter(\n      ({ theater_id }) => theater.theater_id === theater_id\n    );\n    if (showTimeInfo.length > 0) {\n      obj[theater.theater_name] = showTimeInfo.reduce((typeObj, timeObj) => {\n        const { type } = timeObj;\n        if (!typeObj[type]) {\n          typeObj[type] = [];\n        }\n        typeObj[type].push(timeObj);\n        typeObj[type].sort((a, b) => a.show_time.localeCompare(b.show_time));\n        return typeObj;\n      }, {});\n    }\n    return obj;\n  }, {});\n};\n\nconst setDateFormat = (date) => {\n  const month = `${date.getMonth() + 1}`.padStart(2, '0');\n  const day = `${date.getDate()}`.padStart(2, '0');\n  return `${date.getFullYear()}-${month}-${day}`;\n};\n\nconst vaildateStateFun = (e, setErrorState, errorState) => {\n  const value = e.target.value;\n  const name = e.target.name;\n  let errorMsg = null;\n  switch (name) {\n    case 'username':\n      if (!value.trim()) {\n        errorMsg = '請輸入姓名';\n      }\n      break;\n    case 'password':\n      if (value.trim().length < 8) {\n        errorMsg = '密碼長度需大於8';\n      }\n      break;\n    case 'email':\n      if (\n        !/^\\w+((-\\w+)|(\\.\\w+))*\\@[A-Za-z0-9]+((\\.|-)[A-Za-z0-9]+)*\\.[A-Za-z]+$/.test(\n          value\n        )\n      ) {\n        errorMsg = 'email格式不對';\n      }\n      break;\n    case 'comfiredPassword':\n      // @ts-ignore\n      const pwd = document.querySelector('#password').value;\n      // @ts-ignore\n      const comfiredPwd = document.querySelector('#comfiredPassword').value;\n      if (pwd !== comfiredPwd) {\n        errorMsg = '密碼不吻合';\n      }\n      break;\n    case 'readTerms':\n      errorMsg = !errorState[name];\n      break;\n  }\n  setErrorState({ ...errorState, [name]: errorMsg });\n};\n\nexport { showTimeListGroupByType, setDateFormat, vaildateStateFun };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useRecoilValue } from 'recoil';\nimport { loginState } from 'store/atom';\nimport styled from 'styled-components';\n\nconst StyledNav = styled.nav`\n  ul {\n    display: flex;\n    height: 37px;\n    align-items: center;\n    padding: 0 10px;\n    li {\n      font-weight: 400;\n      padding: 8px 10px;\n      transition: background 0.125s ease;\n      border-radius: 4px;\n      &:hover {\n        background: rgba(255, 255, 255, 0.2);\n        cursor: pointer;\n      }\n    }\n  }\n`;\n\nfunction Navgation() {\n  const isLoggedIn = useRecoilValue(loginState);\n  return (\n    <StyledNav>\n      <ul>\n        <li>\n          <Link to=\"/\">Browse</Link>\n        </li>\n        {isLoggedIn && (\n          <li>\n            {' '}\n            <Link to=\"/myList\">My List</Link>\n          </li>\n        )}\n      </ul>\n    </StyledNav>\n  );\n}\n\nexport default Navgation;\n","const { gql } = require('@apollo/client');\n\nconst UPDATE_SHOW_TIME = gql`\n  mutation queryTimeByMovieId(\n    $id: String!\n    $date: String!\n    $theater_ids: [String!]!\n  ) {\n    queryTimeByMovieId(id: $id, date: $date, theater_ids: $theater_ids) {\n      theater_id\n      type\n      show_time\n    }\n  }\n`;\n\nconst LOGIN_BY_OAUTH = gql`\n  mutation LoginWithOauth($email: String!, $id: String!) {\n    LoginWithOauth(email: $email, id: $id)\n  }\n`;\n\nconst LOGOUT = gql`\n  mutation logout {\n    logout\n  }\n`;\n\nconst SIGN_IN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password)\n  }\n`;\n\nconst SIGNUP_USER = gql`\n  mutation registerUser(\n    $username: String!\n    $email: String!\n    $password: String!\n  ) {\n    registerUser(\n      data: { username: $username, email: $email, password: $password }\n    )\n  }\n`;\n\nconst SEND_EMAIL = gql`\n  mutation sendComfiredEmail($email: String!) {\n    sendComfiredEmail(email: $email)\n  }\n`;\nconst CHANGE_PASSWORD = gql`\n  mutation changePassword($password: String!, $token: String!) {\n    changePassword(data: { password: $password, token: $token })\n  }\n`;\nconst SET_MOVIE_LIST = gql`\n  mutation addFoviesMovie($favorite_movies: [String!]!) {\n    addFoviesMovie(favorite_movies: $favorite_movies)\n  }\n`;\n\nconst GET_USER_INFO = gql`\n  mutation me {\n    me {\n      username\n      favorite_movies\n      avatar\n    }\n  }\n`;\n\nexport {\n  UPDATE_SHOW_TIME,\n  LOGIN_BY_OAUTH,\n  LOGOUT,\n  SIGN_IN,\n  SIGNUP_USER,\n  SEND_EMAIL,\n  CHANGE_PASSWORD,\n  SET_MOVIE_LIST,\n  GET_USER_INFO,\n};\n","import { useMutation } from '@apollo/client';\nimport { Button, CircularProgress } from '@material-ui/core';\nimport { GET_USER_INFO, LOGOUT, SET_MOVIE_LIST } from 'gql/mutation';\n\nimport React, { useCallback, useEffect, useRef } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { loginState, message, userData } from 'store/atom';\nimport { useChangeLoggedState } from 'store/hook';\nimport styled from 'styled-components';\n\nconst User = styled.div`\n  cursor: pointer;\n  display: flex;\n`;\n\nconst Image = styled.div`\n  border-radius: 40px;\n  margin-left: 12px;\n  overflow: hidden;\n  width: 40px;\n  height: 40px;\n  border: 3px solid transparent;\n  transition: broder 0.125s ease;\n  &:hover {\n    border: 3px solid #e50914;\n  }\n  img {\n    width: 100%;\n    display: block;\n  }\n`;\nconst Name = styled.h2`\n  display: flex;\n  align-items: center;\n  font-weight: 300;\n  height: 40px;\n  font-size: 24px;\n`;\n\nfunction UserProfile(props) {\n  const [msg, setMsg] = useRecoilState(message);\n  const [me, { error, loading }] = useMutation(GET_USER_INFO);\n  const changeState = useChangeLoggedState();\n  const isLoggedIn = useRecoilValue(loginState);\n  const [logout] = useMutation(LOGOUT);\n  const [addFoviesMovie] = useMutation(SET_MOVIE_LIST);\n  const [userInfo, setUserInfo] = useRecoilState(userData);\n  const isTouched = useRef(false);\n\n  //因為需要在每次登入都重新呼叫查詢方法\n  //所以先將findme做成mutatio\n  const fetchData = useCallback(async () => {\n    try {\n      const { data } = await me();\n      setUserInfo(data.me);\n    } catch (error) {\n      console.log(error);\n    }\n  }, [me]);\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      fetchData();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (isTouched.current) {\n      try {\n        addFoviesMovie({\n          variables: {\n            favorite_movies: userInfo.favorite_movies,\n          },\n        });\n      } catch (error) {\n        console.error(error);\n      }\n    } else {\n      isTouched.current = true;\n    }\n  }, [userInfo.favorite_movies]);\n\n  const logoutFun = async () => {\n    try {\n      const { data } = await logout();\n      if (data.logout) {\n        localStorage.removeItem('token');\n        changeState();\n        setUserInfo({ username: '', avatar: '', favorite_movies: [] });\n        setMsg('您已經登出');\n        props.history.push('/');\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  if (loading)\n    return (\n      <div>\n        <CircularProgress />\n      </div>\n    );\n\n  return (\n    <User>\n      <Button onClick={logoutFun} color=\"secondary\">\n        登出\n      </Button>\n      <Name>{userInfo.username}</Name>\n      <Image>\n        <img src={userInfo.avatar} alt=\"profile\" />\n      </Image>\n    </User>\n  );\n}\n\nexport default withRouter(UserProfile);\n","import { useQuery } from '@apollo/client';\nimport { Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Search from 'components/common/Search';\nimport { GET_MOVIES } from 'gql/query';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useLocation, withRouter } from 'react-router-dom';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { movies, loginState, message } from 'store/atom';\nimport { messageState } from 'store/select';\nimport styled from 'styled-components';\nimport { setDateFormat } from '../../util';\nimport Navgation from './Navgation';\nimport UserProfile from './UserProfile';\n\nconst Profile = styled.div`\n  margin-left: auto;\n  a {\n    margin-left: 12px;\n  }\n`;\n\nconst StyledHeader = styled.header`\n  background: linear-gradient(to bottom, black 0%, transparent 100%);\n  display: flex;\n  padding: 40px;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 95vw;\n  z-index: 5;\n`;\n\nconst SearchDiv = styled.div`\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  left: 0;\n  pointer-events: none;\n`;\n\nfunction Header() {\n  const { data, error, loading } = useQuery(GET_MOVIES, {\n    variables: {\n      date: setDateFormat(new Date()),\n    },\n  });\n\n  const { pathname } = useLocation();\n  const isLoggedIn = useRecoilValue(loginState);\n  const { isOpen } = useRecoilValue(messageState);\n\n  const [movieData, setMovieData] = useRecoilState(movies);\n  const [tempList, setTempList] = useState([]);\n  const [msg, setMsg] = useRecoilState(message);\n\n  useEffect(() => {\n    if (!error && !loading) {\n      setMovieData(data.queryMoviesByDate);\n      setTempList(data.queryMoviesByDate);\n    }\n  }, [data, error, loading]);\n\n  //查詢電影\n  const findMovies = (e) => {\n    if (!e.target.value) {\n      setMovieData(tempList);\n      return;\n    }\n    const newMovies = movieData.filter(({ title }) =>\n      title.includes(e.target.value)\n    );\n    setMovieData(newMovies);\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setMsg('');\n  };\n\n  return (\n    <StyledHeader>\n      <Snackbar\n        open={isOpen}\n        autoHideDuration={3000}\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n        onClose={handleClose}\n      >\n        <MuiAlert\n          elevation={6}\n          variant=\"filled\"\n          severity=\"success\"\n          onClose={handleClose}\n        >\n          {msg}\n        </MuiAlert>\n      </Snackbar>\n      <Navgation />\n      {pathname === '/' && (\n        <SearchDiv>\n          <Search text=\"搜尋電影名稱\" width=\"20\" searchEvent={findMovies} />\n        </SearchDiv>\n      )}\n      <Profile>\n        {isLoggedIn ? (\n          <UserProfile />\n        ) : (\n          <>\n            <Link to=\"/singUp\">註冊</Link>\n            <Link to=\"/singIn\">登入</Link>\n          </>\n        )}\n      </Profile>\n    </StyledHeader>\n  );\n}\n\nexport default withRouter(Header);\n","import { useQuery } from '@apollo/client';\nimport { GET_AREA_INFO, GET_THEATER_INFO } from 'gql/query';\nimport React, { useEffect } from 'react';\nimport { useRecoilState } from 'recoil';\nimport styled from 'styled-components';\nimport Header from '../Header';\nimport { areasInfo, theaterInfo } from '../../store';\nimport { useLocation } from 'react-router-dom';\n\nconst MainDiv = styled.main`\n  padding: 1em;\n  margin-top: 100px;\n  overflow-y: scroll;\n  width: 100%;\n`;\n\nfunction Layout({ children }) {\n  const [area, setArea] = useRecoilState(areasInfo);\n  const [theater, setTheater] = useRecoilState(theaterInfo);\n  const areaInfo = useQuery(GET_AREA_INFO);\n  const treaters = useQuery(GET_THEATER_INFO);\n\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  useEffect(() => {\n    if (!areaInfo.loading && !areaInfo.error) {\n      setArea(areaInfo.data.queryAllArea);\n    }\n    if (!treaters.loading && !treaters.error) {\n      setTheater(treaters.data.getAllTheaters);\n    }\n  }, [areaInfo, treaters]);\n\n  return (\n    <>\n      <Header />\n      <MainDiv>{children}</MainDiv>\n    </>\n  );\n}\n\nexport default Layout;\n","import { InputLabel, MenuItem, Select } from '@material-ui/core';\nimport React from 'react';\nimport Search from '../../components/common/Search';\nimport styled from 'styled-components';\n\nconst StyledDiv = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst SelectDiv = styled.div`\n  margin-bottom: 8px;\n  min-width: 120px;\n  border-radius: 4px;\n  background-color: white;\n  padding: 16px;\n`;\n\nconst StyledSelect = styled(Select)`\n  width: 100px;\n`;\n\nexport default function TheaterSelect({\n  area,\n  getAreaValue,\n  areaItems,\n  searchTheater,\n}) {\n  return (\n    <StyledDiv>\n      <SelectDiv>\n        <InputLabel id=\"arae-label\">選擇地區</InputLabel>\n        <StyledSelect labelId=\"arae-label\" onChange={getAreaValue} value={area}>\n          {areaItems.map((areaInfo) => (\n            <MenuItem value={areaInfo.area_id} key={areaInfo.area_id}>\n              {areaInfo.area_name}\n            </MenuItem>\n          ))}\n        </StyledSelect>\n      </SelectDiv>\n      <Search text=\"搜尋戲院名稱\" width=\"50\" searchEvent={searchTheater} />\n    </StyledDiv>\n  );\n}\n","import { Button, Paper } from '@material-ui/core';\nimport styled, { css } from 'styled-components';\nimport React from 'react';\n\nconst StyledDiv = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  div {\n    width: 20%;\n    height: 80px;\n    margin-top: 8px;\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  width: 100%;\n\n  ${({ selected }) =>\n    selected &&\n    css`\n      color: #fff !important;\n    `}\n`;\n\nconst StyleP = styled.p`\n  margin: 0;\n  font-size: 20px;\n`;\n\nconst StyledPaper = styled(Paper)`\n  ${({ selected }) =>\n    selected &&\n    css`\n      background-color: #0c5eab !important;\n    `}\n`;\nexport default function DateSelect({ setQueryDate, queryDate }) {\n  return (\n    <StyledDiv>\n      {[0, 1, 2, 3, 4].map((num, i) => {\n        const date = new Date();\n        date.setDate(date.getDate() + num);\n        const selected = isDateEqualTo(date, queryDate);\n        return (\n          <>\n            <StyledPaper elevation={2} key={`${num}-Paper`} selected={selected}>\n              <StyledButton\n                key={`${num}-Button`}\n                selected={selected}\n                onClick={() => {\n                  setQueryDate(date);\n                }}\n              >\n                {' '}\n                <StyleP key={`${num}-p`}>\n                  {date.getMonth() + 1} 月 <br />\n                  {date.getDate()}日\n                </StyleP>\n              </StyledButton>\n            </StyledPaper>\n          </>\n        );\n      })}\n    </StyledDiv>\n  );\n}\n\nconst isDateEqualTo = (date, selectDate) => {\n  return (\n    date.getDate() === selectDate.getDate() &&\n    date.getMonth() === selectDate.getMonth()\n  );\n};\n","import { CircularProgress } from '@material-ui/core';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { setDateFormat } from '../../util';\n\nconst StyledDiv = styled.div`\n  height: 510px;\n`;\n\nconst List = styled.ul`\n  height: 510px;\n  overflow-y: scroll;\n  li {\n    padding-bottom: 28px;\n    border-bottom: 2px solid red;\n    p {\n      font-size: 16px;\n      color: #434eae;\n      font-weight: 700;\n      margin: 8px auto;\n    }\n  }\n`;\n\nconst Type = styled.div`\n  border-radius: 4px;\n  background-color: #c840aa;\n  font-weight: 500;\n  width: 40px;\n  font-size: 12px;\n  text-align: center;\n  margin-top: 8px;\n  margin-bottom: 8px;\n`;\n\nconst StyledButton = styled.button`\n  pointer-events: auto;\n  color: #26282a;\n  border: 1px solid #26282a;\n  cursor: pointer;\n  padding: 10px;\n  margin-right: 5px;\n  margin-bottom: 8px;\n  font-size: 16px;\n  border-radius: 4px;\n  &:disabled {\n    border: 1px solid #b9b9b9;\n    color: #b9b9b9;\n    pointer-events: none;\n    background: #fff;\n  }\n`;\n\nexport default function TimeList({ timeList, queryDate, loading }) {\n  const disabledState = (showTime) => {\n    const time = `${setDateFormat(queryDate)} ${showTime}`;\n    const dateTime = new Date(time);\n    return new Date() > dateTime;\n  };\n\n  if (loading)\n    return (\n      <StyledDiv>\n        {' '}\n        <CircularProgress />\n      </StyledDiv>\n    );\n\n  if (!Object.values(timeList).length) return <StyledDiv>無上映資料</StyledDiv>;\n  return (\n    <List>\n      {Object.keys(timeList).map((key) => {\n        return (\n          <li key={key}>\n            <p>{key}:</p>\n            <div key={`${key}-div`}>\n              {Object.keys(timeList[key]).map((type) => {\n                return (\n                  <>\n                    <Type key={`${key}-${type}`}>{type}</Type>\n                    <div key={`${key}-${type}-time`}>\n                      {timeList[key][type].map(({ show_time }) => {\n                        return (\n                          <StyledButton\n                            key={`${key}-${type}-${show_time}`}\n                            disabled={disabledState(show_time)}\n                          >\n                            {show_time}\n                          </StyledButton>\n                        );\n                      })}\n                    </div>\n                  </>\n                );\n              })}\n            </div>\n          </li>\n        );\n      })}\n    </List>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useRecoilValue } from 'recoil';\nimport { areasInfo, theaterInfo } from '../../store';\nimport { useMutation } from '@apollo/client';\nimport { UPDATE_SHOW_TIME } from 'gql/mutation';\nimport TheaterSelect from 'pages/moveInfo/TheaterSelect';\nimport DateSelect from 'pages/moveInfo/DateSelect';\nimport TimeList from 'pages/moveInfo/TimeList';\nimport { showTimeListGroupByType } from '../../util';\nimport { setDateFormat } from '../../util';\n\nconst Container = styled.div`\n  margin: 100px;\n  margin-top: 0;\n  h1 {\n    font-size: 42px;\n  }\n`;\n\nconst CardCont = styled.div`\n  border-radius: 3px;\n  background: rgba(177, 165, 165, 0.112);\n  padding: 0;\n  width: 100%;\n  display: flex;\n`;\n\nconst Post = styled.div`\n  width: 50%;\n  background-image: url(${(props) => `${props.backDrop}`});\n  background-position: center;\n  background-size: contain;\n  background-repeat: no-repeat;\n`;\n\nconst Description = styled.div`\n  width: 50%;\n  padding: 25px;\n  color: #fafafa;\n`;\n\nexport default function MovieInfo({ location }) {\n  const {\n    movie_id,\n    title,\n    anticipation,\n    satifaction,\n    img_src,\n    release_time,\n  } = location.state;\n  const [queryTimeByMovieId, { loading }] = useMutation(UPDATE_SHOW_TIME);\n  const areaItems = useRecoilValue(areasInfo);\n  const theaterItems = useRecoilValue(theaterInfo);\n  const [timeList, setTimrList] = useState({});\n  const [dateTime, setDateTime] = useState(new Date());\n  const [tempList, setTempList] = useState({});\n  const [area, setArea] = useState(28);\n  const [city, setCity] = useState('台北市');\n  const [theater, setTheater] = useState(\n    theaterItems.filter(({ area_id }) => area_id === '28')\n  );\n\n  useEffect(() => {\n    setTheater(theaterItems.filter(({ area_id }) => area_id === `${area}`));\n  }, [area, theaterItems]);\n\n  useEffect(() => {\n    getShowTimeList(movie_id, setDateFormat(dateTime), theater);\n  }, [dateTime, theater, movie_id]);\n\n  const getAreaValue = (e) => {\n    const areaId = e.target.value;\n    setArea(areaId);\n    setCity(areaItems.find(({ area_id }) => area_id === areaId).area_name);\n  };\n\n  const setQueryDate = (date) => {\n    setDateTime(date);\n  };\n\n  const searchTheater = (e) => {\n    const theaterName = e.target.value.trim();\n    if (!theaterName) {\n      setTimrList({ ...tempList });\n      return;\n    }\n    const newList = Object.entries(tempList).reduce((obj, [key, value]) => {\n      if (key.includes(theaterName)) {\n        obj[key] = value;\n      }\n      return obj;\n    }, {});\n    setTimrList({ ...newList });\n  };\n\n  const getShowTimeList = async (id, date, theaterArray) => {\n    const theater_ids = theaterArray.map(({ theater_id }) => theater_id);\n    try {\n      const data = await queryTimeByMovieId({\n        variables: {\n          id,\n          date,\n          theater_ids,\n        },\n      });\n      const list = showTimeListGroupByType(\n        theaterArray,\n        data.data.queryTimeByMovieId\n      );\n      setTimrList({\n        ...list,\n      });\n      setTempList({ ...list });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return (\n    <Container>\n      <CardCont>\n        <Post backDrop={img_src} />\n        <Description>\n          <h1>{title}</h1>\n          <TheaterSelect\n            area={area}\n            getAreaValue={getAreaValue}\n            areaItems={areaItems}\n            searchTheater={searchTheater}\n          />\n          <DateSelect setQueryDate={setQueryDate} queryDate={dateTime} />\n          <h1>{city}</h1>\n          <TimeList\n            timeList={timeList}\n            queryDate={dateTime}\n            loading={loading}\n          />\n        </Description>\n      </CardCont>\n    </Container>\n  );\n}\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n    color: 'white',\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  multilineColor: {\n    color: 'white',\n  },\n}));\n\nexport default useStyles;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledDiv = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  &::before,\n  &::after {\n    content: '';\n    flex: 1;\n    border-bottom: 1px solid white;\n  }\n  &:not(:empty)::before {\n    margin-right: 0.25em;\n  }\n  &:not(:empty)::after {\n    margin-left: 0.25em;\n  }\n`;\nexport default function CentralText({ children }) {\n  return <StyledDiv>{children}</StyledDiv>;\n}\n","import React, { useState } from 'react';\nimport { IconButton, InputAdornment } from '@material-ui/core';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport TextField from '@material-ui/core/TextField';\nimport styled from 'styled-components';\n\nconst StyledTextField = styled(TextField)`\n  background: #8c8c8c;\n  label {\n    color: white;\n  }\n`;\n\nexport default function Password({\n  text,\n  vaildateFun,\n  onChangeFun,\n  errorState,\n}) {\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const label = text.charAt(0).toUpperCase() + text.slice(1);\n  return (\n    <StyledTextField\n      variant=\"filled\"\n      color=\"secondary\"\n      required\n      fullWidth\n      name={text}\n      label={label}\n      type={showPassword ? 'text' : 'password'}\n      id={text}\n      autoComplete={`\"current-${text}\"`}\n      error={!!errorState[text]}\n      helperText={errorState[text]}\n      onChange={(e) => {\n        onChangeFun(e);\n        vaildateFun(e);\n      }}\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={() => {\n                handleClickShowPassword();\n              }}\n              onMouseDown={handleMouseDownPassword}\n            >\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport styled from 'styled-components';\nimport { Link, withRouter } from 'react-router-dom';\nimport GoogleLogin from 'react-google-login';\nimport FacebookLogin from 'react-facebook-login';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_BY_OAUTH } from 'gql/mutation';\nimport { useChangeLoggedState } from 'store/hook';\nimport { vaildateStateFun } from '../../util';\n\nimport useStyles from 'style';\nimport CentralText from './CentralText';\nimport Password from './Password';\nimport { CircularProgress } from '@material-ui/core';\n\nconst StyleContainer = styled(Container)`\n  background-color: rgba(0, 0, 0, 0.75);\n  border-radius: 8px;\n  padding-top: 2px;\n`;\nconst StyledTextField = styled(TextField)`\n  background: #8c8c8c;\n  label {\n    color: white;\n  }\n`;\nconst StyledCheckBox = styled.input`\n  width: 16px;\n  height: 16px;\n  margin: 0 8px;\n`;\n\nconst StyledButton = styled(Button)`\n  &:disabled {\n    background-color: #e0e0e0 !important;\n  }\n`;\n\nconst GOOGLE_LOGIN_BTN = styled(GoogleLogin)`\n  width: 100%;\n  justify-content: center;\n  div {\n    display: flex;\n  }\n`;\n\nconst UserForm = (props) => {\n  const { formStyle, action } = props;\n  const isSignUp = formStyle === 'singUp';\n  const userObj = {\n    password: '',\n    email: '',\n  };\n  if (isSignUp) {\n    userObj.username = '';\n    userObj.comfiredPassword = '';\n  }\n  const classes = useStyles();\n  const changeState = useChangeLoggedState();\n  const [LoginWithOauth] = useMutation(LOGIN_BY_OAUTH);\n  const [userData, setUserData] = useState(userObj);\n  const [errorState, setErrorState] = useState({\n    ...userObj,\n    readTerms: isSignUp,\n  });\n  const [disableState, setDisableState] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const didMount = useRef(false);\n\n  useEffect(() => {\n    if (didMount.current) {\n      const vaildate =\n        Object.values(errorState)\n          .map(Boolean)\n          .some((value) => value) ||\n        !Object.values(userData)\n          .map(Boolean)\n          .every((value) => value);\n      setDisableState(vaildate);\n    } else {\n      didMount.current = true;\n    }\n  }, [errorState]);\n\n  const getUserData = (e) => {\n    setUserData({\n      ...userData,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const vaildateState = (e) => {\n    vaildateStateFun(e, setErrorState, errorState);\n  };\n\n  const loginWithOauth = async (email, id) => {\n    setToken({ email, id }, LoginWithOauth, 'LoginWithOauth');\n  };\n\n  const responseGoogle = ({ profileObj }) => {\n    const { email, googleId } = profileObj;\n    loginWithOauth(email, googleId);\n  };\n\n  const responseFacebook = async ({ email, id }) => {\n    loginWithOauth(email, id);\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n    setToken(userData, action, isSignUp ? 'registerUser' : 'login');\n  };\n\n  const setToken = async (varibles, action, key) => {\n    try {\n      setIsLoading(true);\n      const { data } = await action({\n        variables: {\n          ...varibles,\n        },\n      });\n      props.history.push('/');\n      localStorage.setItem('token', data[key]);\n      changeState();\n    } catch (err) {\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <StyleContainer component=\"main\" maxWidth=\"xs\">\n      {isLoading ? (\n        <div>\n          {' '}\n          <CircularProgress />\n        </div>\n      ) : (\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h4\">\n            {formStyle === 'singUp' ? 'Sign Up' : 'Sign In'}\n          </Typography>\n          <form className={classes.form} onSubmit={submitHandler}>\n            <Grid container spacing={2}>\n              {formStyle === 'singUp' && (\n                <>\n                  {' '}\n                  <Grid item xs={12}>\n                    <StyledTextField\n                      autoComplete=\"name\"\n                      color=\"secondary\"\n                      name=\"username\"\n                      variant=\"filled\"\n                      required\n                      fullWidth\n                      id=\"username\"\n                      label=\"Name\"\n                      error={!!errorState.username}\n                      helperText={errorState.username}\n                      onChange={(e) => {\n                        getUserData(e);\n                        vaildateState(e);\n                      }}\n                    />\n                  </Grid>\n                </>\n              )}\n\n              <Grid item xs={12}>\n                <StyledTextField\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  error={!!errorState.email}\n                  helperText={errorState.email}\n                  onChange={(e) => {\n                    getUserData(e);\n                    vaildateState(e);\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Password\n                  text=\"password\"\n                  errorState={errorState}\n                  vaildateFun={vaildateState}\n                  onChangeFun={getUserData}\n                />\n                {formStyle !== 'singUp' && (\n                  <Grid container justify=\"flex-end\">\n                    <Grid item>\n                      <Link to=\"/forgetPassword\">忘記密碼</Link>\n                    </Grid>\n                  </Grid>\n                )}\n              </Grid>\n              {formStyle === 'singUp' && (\n                <>\n                  <Grid item xs={12}>\n                    <Password\n                      text=\"comfiredPassword\"\n                      vaildateFun={vaildateState}\n                      onChangeFun={getUserData}\n                      errorState={errorState}\n                    />\n                  </Grid>\n                  <Grid item xs={12}>\n                    <FormControlLabel\n                      control={\n                        <StyledCheckBox\n                          type=\"checkbox\"\n                          name=\"readTerms\"\n                          id=\"readTerms\"\n                          onChange={vaildateState}\n                        />\n                      }\n                      label=\"我已經詳細閱讀條款\"\n                    />\n                  </Grid>\n                </>\n              )}\n            </Grid>\n            <StyledButton\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.submit}\n              disabled={disableState}\n            >\n              {isSignUp ? '註冊' : '登入'}\n            </StyledButton>\n            {isSignUp && (\n              <Grid container justify=\"flex-end\">\n                <Grid item>\n                  <Link to=\"/singIn\">已經有帳號了嗎？ 登入</Link>\n                </Grid>\n              </Grid>\n            )}\n            <CentralText>或</CentralText>\n            <br />\n            <GOOGLE_LOGIN_BTN\n              clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\n              buttonText=\"Login with Google\"\n              onSuccess={responseGoogle}\n              cookiePolicy={'single_host_origin'}\n            />\n            <br />\n            <FacebookLogin\n              appId={process.env.REACT_APP_FACEBOOK_APP_ID}\n              autoLoad={false}\n              fields=\"name,email,picture\"\n              callback={responseFacebook}\n              cssClass=\"my-fb-class\"\n              icon=\"fa-facebook\"\n            />\n          </form>\n        </div>\n      )}\n    </StyleContainer>\n  );\n};\n\nexport default withRouter(UserForm);\n","import { useMutation } from '@apollo/client';\nimport UserForm from 'components/common/UserForm';\nimport { SIGNUP_USER } from 'gql/mutation';\nimport React from 'react';\n\nexport default function SingUp() {\n  const [registerUser] = useMutation(SIGNUP_USER);\n  return <UserForm formStyle=\"singUp\" action={registerUser} />;\n}\n","import { useMutation } from '@apollo/client';\nimport UserForm from 'components/common/UserForm';\nimport { SIGN_IN } from 'gql/mutation';\nimport React from 'react';\n\nexport default function SingIn() {\n  const [login] = useMutation(SIGN_IN);\n  return <UserForm formStyle=\"singIn\" action={login} />;\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  Button,\n  Container,\n  Grid,\n  TextField,\n  Typography,\n} from '@material-ui/core';\nimport styled from 'styled-components';\nimport useStyles from 'style';\nimport { vaildateStateFun } from '../../util';\nimport Password from './Password';\nimport { useLocation, withRouter } from 'react-router-dom';\nimport { useRecoilState } from 'recoil';\nimport { message } from 'store/atom';\nconst StyleContainer = styled(Container)`\n  background-color: rgba(0, 0, 0, 0.75);\n  border-radius: 8px;\n  padding-top: 2px;\n`;\n\nconst StyledTextField = styled(TextField)`\n  background: #8c8c8c;\n  label {\n    color: white;\n  }\n`;\n\nconst StyledButton = styled(Button)`\n  &:disabled {\n    background-color: #e0e0e0 !important;\n  }\n`;\n\nfunction SetPassword(props) {\n  const { formType, action } = props;\n  const { pathname } = useLocation();\n  const isComfiredEimal = formType === 'comfired';\n  const classes = useStyles();\n  const [errorState, setErrorState] = useState({});\n  const [pwdData, setPwdData] = useState({});\n\n  useEffect(() => {\n    if (!isComfiredEimal) {\n      const token = pathname.slice(17);\n      setPwdData({ ...pwdData, token });\n    }\n  }, [pathname]);\n\n  const [msg, setMsg] = useRecoilState(message);\n\n  const vaildateState = (e) => {\n    vaildateStateFun(e, setErrorState, errorState);\n  };\n  const getPwdData = (e) => {\n    setPwdData({\n      ...pwdData,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const { data } = await action({\n        variables: {\n          ...pwdData,\n        },\n      });\n      if (data.sendComfiredEmail) {\n        setMsg('\b已寄出驗證信');\n      }\n      if (!isComfiredEimal) {\n        setMsg('重設密碼成功，請重新登入');\n        props.history.push('/');\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <StyleContainer component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h4\">\n          {isComfiredEimal ? 'Forget Password' : 'Reset Password'}\n        </Typography>\n        <div className={classes.form}>\n          <Grid container spacing={2}>\n            {isComfiredEimal && (\n              <Grid item xs={12}>\n                <StyledTextField\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  onChange={getPwdData}\n                />\n              </Grid>\n            )}\n            {!isComfiredEimal && (\n              <>\n                <Grid item xs={12}>\n                  <Password\n                    text=\"password\"\n                    errorState={errorState}\n                    vaildateFun={vaildateState}\n                    onChangeFun={getPwdData}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <Password\n                    text=\"comfiredPassword\"\n                    vaildateFun={vaildateState}\n                    onChangeFun={getPwdData}\n                    errorState={errorState}\n                  />\n                </Grid>\n              </>\n            )}\n          </Grid>\n          <StyledButton\n            type=\"button\"\n            fullWidth\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.submit}\n            onClick={handleSubmit}\n          >\n            {isComfiredEimal ? '寄送驗證信' : '重設密碼'}\n          </StyledButton>\n        </div>\n      </div>\n    </StyleContainer>\n  );\n}\n\nexport default withRouter(SetPassword);\n","import { useMutation } from '@apollo/client';\nimport SetPassword from 'components/common/SetPassword';\nimport { SEND_EMAIL } from 'gql/mutation';\nimport React from 'react';\n\nexport default function ForgetPassword() {\n  const [sendComfiredEmail] = useMutation(SEND_EMAIL);\n  return <SetPassword formType=\"comfired\" action={sendComfiredEmail} />;\n}\n","import { useMutation } from '@apollo/client';\nimport SetPassword from 'components/common/SetPassword';\nimport { CHANGE_PASSWORD } from 'gql/mutation';\nimport React from 'react';\n\nexport default function ResetPassword() {\n  const [changePassword, { error, loading }] = useMutation(CHANGE_PASSWORD);\n  if (loading) return <div>NOW LOADING</div>;\n  if (error) return <div>{error}</div>;\n  return <SetPassword formType=\"reset\" action={changePassword} />;\n}\n","import { useQuery } from '@apollo/client';\nimport { GET_MOVIE_LIST } from 'gql/query';\nimport React, { useEffect, useState } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport styled from 'styled-components';\nimport { userData } from '../store';\n\nconst StyledLi = styled.li`\n  display: flex;\n  justify-content: center;\n  padding-bottom: 36px;\n  border-bottom: 1px solid red;\n  margin-bottom: 36px;\n  color: #000;\n`;\n\nconst PostDiv = styled.div`\n  padding: 20px;\n  border-right: 1px solid #d2d2d2;\n  justify-content: center;\n`;\n\nconst InfoDiv = styled.div`\n  padding: 20px;\n  a {\n    line-height: 1.3;\n    color: #434eae;\n    text-decoration: underline;\n  }\n`;\n\nconst MovieInfoCard = styled.div`\n  background: #ececec;\n  border: 1px solid #d2d2d2;\n  display: flex;\n  width: 800px;\n`;\n\nconst TextP = styled.p`\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 7;\n  -webkit-box-orient: vertical;\n  text-overflow: ellipsis;\n`;\n\nexport default function MyList() {\n  const { favorite_movies } = useRecoilValue(userData);\n  const { data, loading, error } = useQuery(GET_MOVIE_LIST, {\n    variables: {\n      ids: favorite_movies,\n    },\n  });\n  const [movieInfos, setmovieInfos] = useState([]);\n\n  useEffect(() => {\n    if (!loading && !error) {\n      setmovieInfos(data.queryMoviesByIds);\n    }\n  }, [data]);\n\n  if (!favorite_movies.length) return <div>尚無喜愛電影資料</div>;\n\n  return (\n    <ul>\n      {movieInfos.map(\n        ({\n          title,\n          anticipation,\n          img_src,\n          release_time,\n          release_text,\n          info_src,\n        }) => (\n          <StyledLi key={title}>\n            <MovieInfoCard>\n              <PostDiv>\n                <img src={img_src} width=\"294px\" alt=\"\" />\n              </PostDiv>\n              <InfoDiv>\n                <h1>{title}</h1>\n                <p>{release_time}</p>\n                <p>{anticipation}</p>\n                <TextP>{release_text}</TextP>\n                <a href={info_src}>詳全文</a>\n              </InfoDiv>\n            </MovieInfoCard>\n          </StyledLi>\n        )\n      )}\n    </ul>\n  );\n}\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport { useRecoilValue } from 'recoil';\nimport { loginState } from '../../store';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const isLoggedIn = useRecoilValue(loginState);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        isLoggedIn ? (\n          <Component {...props} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: 'singIn',\n              state: { from: props.location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","import home from 'pages/home';\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { faCheck, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport Layout from './components/common/Layout';\nimport movieInfo from 'pages/moveInfo';\nimport singUp from 'pages/singUp';\nimport singIn from 'pages/singIn';\nimport forgetPassword from 'pages/forgetPassword';\nimport resetPassword from 'pages/resetPassword';\nimport myList from 'pages/myList';\nimport PrivateRoute from 'components/common/PrivateRoute';\n\nlibrary.add(fab, faCheck, faPlus);\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <Layout>\n        <Switch>\n          <Route path=\"/\" exact component={home} />\n          <Route path=\"/singUp\" component={singUp} />\n          <Route path=\"/singIn\" component={singIn} />\n          <Route path=\"/forgetPassword\" component={forgetPassword} />\n          <Route path=\"/change-password/:token\" component={resetPassword} />\n          <Route path=\"/movie-info/:movieId\" component={movieInfo} />\n          <PrivateRoute path=\"/myList\" component={myList} />\n        </Switch>\n      </Layout>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from 'styled-components';\nimport normalize from 'normalize.css';\n\nconst GlobalStyles = createGlobalStyle`\n    ${normalize}\n\n    html, body, div, span, applet, object, iframe,\n    h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n    a, abbr, acronym, address, big, cite, code,\n    del, dfn, em, img, ins, kbd, q, s, samp,\n    small, strike, strong, sub, sup, tt, var,\n    b, u, i, center,\n    dl, dt, dd, ol, ul, li,\n    fieldset, form, label, legend,\n    table, caption, tbody, tfoot, thead, tr, th, td,\n    article, aside, canvas, details, embed, \n    figure, figcaption, footer, header, hgroup, \n    menu, nav, output, ruby, section, summary,\n    time, mark, audio, video {\n      margin: 0 ;\n      padding: 0;\n      border: 0;\n      font-size: 100%;\n      font: inherit;\n      vertical-align: baseline;\n    }\n    /* HTML5 display-role reset for older browsers */\n    article, aside, details, figcaption, figure, \n      footer, header, hgroup, menu, nav, section {\n      display: block;\n    }\n    body {\n      line-height: 1;\n    }\n    ol, ul {\n      list-style: none;\n    }\n\n    * {\n        @import \"https://fonts.googleapis.com/css?family=Lato:100,300,400,700,900\";\n      }\n\n    *, *:before, *:after {\n        box-sizing: border-box;\n      }\n    \n      body,\n      html {\n        height: 100%;\n        margin: 0;\n      }\n    \n      body {\n        font-family: \"Lato\", sans-serif;\n        background-color: #fff;\n        line-height: 1.4;\n        background: #221f1f;\n        color: #ffffff;\n      }\n      \n      a,a:hover{\n        color: #fff;\n        text-decoration:none;\n      }\n    \n      code,\n      pre {\n        max-width: 100%;\n        overflow: auto;\n        margin: 0 auto;\n      }\n\n      .my-fb-class{\n        width: 100%;\n        background: #4c69ba !important;\n        color: #fff;\n        border-right: 1px solid transition !important;\n        border-radius:2px;\n        padding: 10px;\n        font-size: 14px;\n        margin-top: 8px;\n        font-weight: 500;\n        margin-bottom: 20px;\n    }\n\n    .my-fb-class i{\n        margin-right: 20px;\n    }\n`;\nexport default GlobalStyles;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport GlobalStyle from './components/GlobalStyle';\nimport {\n  ApolloClient,\n  ApolloProvider,\n  InMemoryCache,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from 'apollo-link-context';\nimport { RecoilRoot } from 'recoil';\n\nconst uri = process.env.REACT_APP_URI;\n\n//啟動快取\nconst cache = new InMemoryCache();\nconst httplink = createHttpLink({ uri });\nconst authLink = setContext((_, { headers }) => {\n  return {\n    headers: {\n      ...headers,\n      authorization: localStorage.getItem('token') || '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // @ts-ignore\n  link: authLink.concat(httplink),\n  cache,\n\n  //啟用開發者工具\n  connectToDevTools: true,\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <RecoilRoot>\n      <GlobalStyle />\n      <App />\n    </RecoilRoot>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}